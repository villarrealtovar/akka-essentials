akka {
    loglevel = DEBUG
}

mySpecialConfig {
    akka {
        loglevel = INFO
    }
}

# timed assertions test config
specialTimedAssertionsConfig {
    akka.test.single-expect-default = 0.3s
}

# intercepting log messages test
interceptingLogMessages {
    akka {
        loggers = ["akka.testkit.TestEventListener"] #this is a logger
        test {
            filter-leeway = 5s
        }
    }
}

# router demo
routersDemo {
  akka {
    actor.deployment {
      # important / for /poolMaster2
      /poolMaster2 {
        router = round-robin-pool
        nr-of-instances = 5
      }
      # important / for /groupMaster2
      /groupMaster2 {
        router = round-robin-group
        routees.paths = ["/user/slave_1", "/user/slave_2","/user/slave_3","/user/slave_4","/user/slave_5"]
      }
    }
  }
}

# dispatchers demo
my-dispatcher {
    type = Dispatcher # there are also PinnedDispatcher, CallingThreadDispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
        fixed-pool-size = 1
    }
    throughput = 30
}


dispatcherDemo {
  akka.actor.deployment {
    /javt {
      dispatcher = my-dispatcher
    }
  }
}

# mailboxes demo
mailboxesDemo {
  support-ticket-dispatcher {
    mailbox-type = "part5infra.Mailboxes$SupportTicketPriorityMailbox"
  }
  control-mailbox {
    mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
  }

  akka.actor.deployment {
    /altControlAwareActor {
        mailbox = control-mailbox
    }
  }
}